<launch>
	
	# load parameters (such as coordinates of goals, etc.)
	<rosparam file="$(find wheeled_robin_guided_tour)/launch/parameters.yaml" command="load" ns="goals" />
	
	<node pkg="wheeled_robin_guided_tour" name="state_machine" type="state_machine">
		
		# range (from base) to trigger area (triggering radius)
		<param name="base_range" value="0.5" type="double" />
		
		# frame of identified person/group ("/dominant_person" or "/group")
		<param name="person_frame" value="/dominant_person" type="string" />
		
		# validity duration for button events
		<param name="button_duration" value="5.0" type="double" />
		
		# basename for goal parameters (e.g. "goal_1","goal_2", ... where "goal_" is basename)
		<param name="goal_basename" value="goal_" type="string" />
		
		# absolute path to parent video folder
		<param name="video_path" value="/home/USERNAME/Downloads" type="string" />
		
	</node>
	
	<node pkg="rosserial_python" type="serial_node.py" args="/dev/ttyACM0" name="rosserial"/>
	
	<include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
	    <arg name="publish_tf"  value="true"/>
	    <arg name="rgb_processing" value="true"/> <!-- only required if we use android client -->
	    <arg name="depth_processing" value="true"/>
	    <arg name="depth_registered_processing" value="false"/>
	    <arg name="depth_registration" value="false"/>
	    <arg name="disparity_processing" value="false"/>
	    <arg name="disparity_registered_processing" value="false"/>
	    <arg name="scan_processing" value="false"/>
	</include>

	<node name="openni_tracker" pkg="openni_tracker" type="openni_tracker" args="-d $(find openni_tracker)/openni_tracker.xml" output="screen" >
		<param name = "camera_frame_id" value = "/camera_link" />
	</node>
	
	<node pkg="robin_people_detection" type="robin_people_detection" name="robin_people_detection" output="screen" />
	
</launch>
